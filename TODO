✅ TODO_fuzzer_proxy.md
🔧 Structură generală
 Creează două fișiere:

 handle_tcp.cpp – gestiune conexiuni TCP

 handle_udp.cpp – gestiune datagrame UDP

 Creează header comun fuzzing_rules.hpp pentru reguli

 Creează fișier principal main_proxy.cpp cu logică de inițializare și dispatcher TCP/UDP

 Creează thread separat pentru:

 acceptarea conexiunilor TCP

 gestionarea pachetelor UDP

 Creează thread pentru fiecare conexiune (TCP) sau canal (UDP)

🧪 Fuzzing
 Creează fișier fuzzing_rules.cpp cu următoarele reguli:

 [MESAJ]

 [FUZZ] [MESAJ]

 [MESAJ] [FUZZ]

 [FUZZ] [MESAJ] [FUZZ]

 [FUZZ]

 Funcțiile trebuie să poată aplica bit flip, inserare aleatorie, trunchiere, dublare

 Alege aleatoriu o regulă pentru fiecare pachet

 Permite activarea/dezactivarea fuzzing-ului pe direcții diferite (ex: doar client -> server)

📁 Detectare comportament aplicație
 Creează modul BehaviorAnalyzer

 La conectare, așteaptă 0.5-2 secunde un mesaj de la entitatea cealaltă

 Dacă nu primește nimic, marchează conexiunea ca "pasivă"

 Dacă primește date, marchează ca "activă"

 În cazul pasiv, trimite un [FUZZ] simplu imediat după conectare

 Adaugă expects_input_first ca flag pentru fiecare conexiune

🤖 Strategie adaptivă (fuzzing evolutiv)
 Creează modul AdaptiveFuzzingManager

 Ține scoruri pentru fiecare mesaj trimis (ex: primit răspuns = util)

 Stochează mesajele cu outcome (succes, blocaj, timeout)

 Prioritizează trimiteri viitoare din cele utile

 Creează fișier input_seeds.txt unde salvezi inputurile ce au funcționat

 Funcție generate_next_input():

combină mesaje din trecut

aplică mutații (substituții, inversări, adăugări de FUZZ)

 Posibil mod de rulare:

AUTO (detectare pasiv/activ)

FORCE_FUZZ (doar fuzzing)

PASSIVE (doar așteaptă)

🪵 Logging detaliat
 Pentru fiecare conexiune sau canal UDP:

 Loghează: direcție, dimensiune pachet, regulă aplicată, rezultat (răspuns / timeout)
 
 Marchează dacă aplicația a fost activă sau pasivă

 Salvează în /logs/<proxy_name>.log

🧪 Testare
 Testează cu netcat pentru TCP și UDP

 Testează cazul în care aplicația nu răspunde dacă mesajul e invalid

 Testează caz în care aplicația așteaptă input și nu trimite nimic singură

 Test script care compară date originale vs fuzzed vs rezultat răspuns